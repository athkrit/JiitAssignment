package t.mk.three.jiitassignment.extensionimport android.os.Parcelableimport androidx.lifecycle.SavedStateHandleimport kotlinx.coroutines.flow.StateFlowfun<T: Parcelable> SavedStateHandle.proxyList(name: String, defaultValue: List<T>): SaveStateHandleListProxy<T> =    SaveStateHandleListProxy(this, name, defaultValue)class SaveStateHandleListProxy<T: Parcelable>(    private val state: SavedStateHandle,    private val name: String,    private val defaultValue: List<T>) {    var value: List<T>        get() = state[name] ?: defaultValue        set(value) { state[name] = value }    fun getStateFlow(): StateFlow<List<T>> = state.getStateFlow(name, defaultValue)}fun<T: Parcelable?> SavedStateHandle.proxy(name: String, defaultValue: T): SaveStateHandleProxy<T> =    SaveStateHandleProxy(this, name, defaultValue)class SaveStateHandleProxy<T: Parcelable?>(    private val state: SavedStateHandle,    private val name: String,    private val defaultValue: T) {    var value: T        get() = state[name] ?: defaultValue        set(value) { state[name] = value }    fun getStateFlow(): StateFlow<T?> = state.getStateFlow(name, defaultValue)}fun SavedStateHandle.proxyString(name: String, defaultValue: String): SaveStateHandleStringProxy =    SaveStateHandleStringProxy(this, name, defaultValue)class SaveStateHandleStringProxy(    private val state: SavedStateHandle,    private val name: String,    private val defaultValue: String) {    var value: String        get() = state[name] ?: defaultValue        set(value) { state[name] = value }    fun getStateFlow(): StateFlow<String> = state.getStateFlow(name, defaultValue)}fun SavedStateHandle.proxyInt(name: String, defaultValue: Int): SaveStateHandleIntProxy =    SaveStateHandleIntProxy(this, name, defaultValue)class SaveStateHandleIntProxy(    private val state: SavedStateHandle,    private val name: String,    private val defaultValue: Int) {    var value: Int        get() = state[name] ?: defaultValue        set(value) { state[name] = value }    fun getStateFlow(): StateFlow<Int> = state.getStateFlow(name, defaultValue)}